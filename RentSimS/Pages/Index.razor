@page "/"
@using System.Globalization;
@using Domain;
@using Protocol;
@using RentSimS.Clients;
@using System.Text.Json;
@using RentSimS.DTOs;
@inject IHttpClientFactory ClientFactory;
@inject IServiceProvider serviceProvider;


<Divider DividerType="DividerType.TextContent" Text="Ages" />

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Current Age:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Stop Work Age:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Rent Start Age:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">End Age:</FieldLabel>

 </Field>
<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.ageCurrent" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="true" @bind-Value="@ageStopWork" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.ageRentStart" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.ageEnd" onchange="@Recalc" /> </FieldBody>
</Field>

<Divider DividerType="DividerType.TextContent" Text="Savings Phase"></Divider>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Asset Class:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Initial Deposits:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Initial Interests:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Interest Rate (%):</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">Monthly Savings:</FieldLabel>
</Field>
<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Cash:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Cash.FromDeposits" Step="1000" Min=0 onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Cash.FromInterests" Step="1000" Min=0 onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.CashGrowthRate" Step="1" Min=0 onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.CashSaveAmountPerMonth" Step="100" onchange="@Recalc" /> </FieldBody>
</Field>
<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Metals:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Metals.FromDeposits" Step="1000" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Metals.FromInterests" Step="1000" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.MetalsGrowthRate" Step="1" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.MetalsSaveAmountPerMonth" Step="100" onchange="@Recalc" /> </FieldBody>
</Field>
<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Stocks:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Stocks.FromDeposits" Step="1000" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.Stocks.FromInterests" Step="1000" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.StocksGrowthRate" Step="1" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.StocksSaveAmountPerMonth" Step="100" onchange="@Recalc" /> </FieldBody>
</Field>

<Divider DividerType="DividerType.TextContent" Text="Results"></Divider>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is2">Total Savings at @ageStopWork:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_totalSavings" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldLabel ColumnSize="ColumnSize.Is2">Monthly Rate from @ageStopWork:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_MonthlyRateStopWorkPhase" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldLabel ColumnSize="ColumnSize.Is2">Monthly Rate from @lifeAssumptions.ageRentStart:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_MonthlyRateRentPhase" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
</Field>

<Divider DividerType="DividerType.TextContent" Text="Monthly Needs"></Divider>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is2"></FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is2">Monthly Needs at age @lifeAssumptions.ageCurrent:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is2">Monthly Needs at age @ageStopWork:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is2">Monthly Needs at age @lifeAssumptions.ageRentStart:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is2"></FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is2">Inflation Rate (%):</FieldLabel>
</Field>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is2">Minimum:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.NeedsCurrentAgeMinimal_perMonth" Step="100" onchange="@Recalc"/> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_laterNeedsResult.NeedsMinimum_AgeStopWork_WithInflation_PerMonth" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_laterNeedsResult.NeedsMinimum_AgeRentStart_WithInflation_PerMonth" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericEdit TValue="System.Double" ReadOnly="false" @bind-Value="@lifeAssumptions.InflationRate" onchange="@Recalc" /> </FieldBody>
</Field>
<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is2">Comfort:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.NeedsCurrentAgeComfort_perMonth" Step="100" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_laterNeedsResult.NeedsComfort_AgeStopWork_WithInflation_PerMonth" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is2"> <NumericPicker ReadOnly="true" @bind-Value="@result_laterNeedsResult.NeedsComfort_AgeRentStart_WithInflation_PerMonth" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
</Field>

<Divider DividerType="DividerType.TextContent" Text="State Rent"></Divider>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Approx. State Rent:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">At age @lifeAssumptions.ageCurrent:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">At age @ageStopWork:</FieldLabel>
    <FieldLabel ColumnSize="ColumnSize.Is1">At age @lifeAssumptions.ageRentStart:</FieldLabel>
</Field>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Gross:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.GrossStateRentFromCurrentAge_perMonth" Step="100" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericPicker ReadOnly="true" @bind-Value="@rentAtStopWork_gross" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.GrossStateRentFromRentStartAge_perMonth" Step="100" onchange="@Recalc" /> </FieldBody>
</Field>

<Field Horizontal="true" ColumnSize="ColumnSize.Is10">
    <FieldLabel ColumnSize="ColumnSize.Is1">Net:</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.NetStateRentFromCurrentAge_perMonth" Step="100" onchange="@Recalc" /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericPicker ReadOnly="true" @bind-Value="@rentAtStopWork_net" CurrencySymbol=" €" CurrencySymbolPlacement="CurrencySymbolPlacement.Suffix" Decimals="0" DecimalSeparator="," GroupSeparator="." /> </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is1"> <NumericEdit ReadOnly="false" @bind-Value="@lifeAssumptions.NetStateRentFromRentStartAge_perMonth" Step="100" onchange="@Recalc" /> </FieldBody>
</Field>


<Row>
    <Column ColumnSize="ColumnSize.Is4">
        <BarChart @ref="barChart" TItem="decimal"/>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <LineChart @ref="lineChart" TItem="decimal" />
    </Column>
</Row>

<Row>
    <Column ColumnSize="ColumnSize.Is10">
        <DataGrid TItem="ResultRow"
                  ColumnSize="ColumnSize.Is1"
                  Narrow="true"
                  Responsive="true"
                  Data="@resultRows"
                  Resizable="true"
                  PageSize=100
        >
            <DataGridCommandColumn TItem="ResultRow" />
            <DataGridColumn TItem="ResultRow" Field="Age" Caption="Age" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End />
            <DataGridColumn TItem="ResultRow" Field="TotalYearBegin" Caption="Total YearBegin" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Cash.YearBegin" Caption="Cash YearBegin" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Stocks.YearBegin" Caption="Stocks YearBegin" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Metals.YearBegin" Caption="Metals YearBegin" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Cash.Deposits" Caption="Cash Deposits" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Stocks.Deposits" Caption="Stocks Deposits" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Metals.Deposits" Caption="Metals Deposits" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="TotalDeposits" Caption="Total Deposits" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />

            <DataGridColumn TItem="ResultRow" Field="Cash.Interests" Caption="Cash Interests" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Stocks.Interests" Caption="Stocks Interests" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Metals.Interests" Caption="Metals Interests" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="TotalInterests" Caption="Total Interests" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />

            <DataGridColumn TItem="ResultRow" Field="Cash.Taxes" Caption="Cash Taxes" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Stocks.Taxes" Caption="Stocks Taxes" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Metals.Taxes" Caption="Metals Taxes" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="TotalTaxes" Caption="Total Taxes" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            
            <DataGridColumn TItem="ResultRow" Field="TotalYearEnd" Caption="Total YearEnd" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Cash.YearEnd" Caption="Cash YearEnd" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Stocks.YearEnd" Caption="Stocks YearEnd" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
            <DataGridColumn TItem="ResultRow" Field="Metals.YearEnd" Caption="Metals YearEnd" Sortable="false" TextAlignment=TextAlignment.End HeaderTextAlignment=TextAlignment.End DisplayFormat="{0,12:C0}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("de-DE")" />
        </DataGrid>
    </Column>
</Row>

@code{
    IPhaseIntegratorClient myPhaseIntegratorClient;

    LifeAssumptions lifeAssumptions = new();
    int ageStopWork = 63;

    decimal result_totalSavings;
    decimal rentAtStopWork_gross;
    decimal rentAtStopWork_net;

    decimal result_MonthlyRateStopWorkPhase;
    decimal result_MonthlyRateRentPhase;

    LaterNeedsResultDTO result_laterNeedsResult = new();

    BarChart<decimal>? barChart;
    LineChart<decimal>? lineChart;

    IEnumerable<ResultRow> resultRows;


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            myPhaseIntegratorClient = serviceProvider.GetService<IPhaseIntegratorClient>();
            Recalc();         
        }
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    savingPhaseFacade = new SavingPhaseFacade(ClientFactory);
    //    await Recalc();
    //}

    public string BeautifyToCurrenctWith0Decimals(decimal num)
    {
        return string.Format(CultureInfo.CreateSpecificCulture("de-DE"), "{0,12:C0}", num);
    }

    private async Task Recalc()
    {
        PhaseIntegratorServiceResultDTO result = await myPhaseIntegratorClient.GetPhaseIntegratorGoodCaseAsync(lifeAssumptions);

        result_totalSavings = result.SavingPhaseServiceResult.FinalSavings;
        rentAtStopWork_gross = result.StateRentResult.AssumedStateRent_Gross_PerMonth;
        rentAtStopWork_net = result.StateRentResult.AssumedStateRent_Net_PerMonth;
        result_laterNeedsResult = result.LaterNeedsResult;

        result_MonthlyRateStopWorkPhase = result.Protocol.Single(x => x.Age == ageStopWork).TotalDeposits / 12m;
        result_MonthlyRateRentPhase = result.Protocol.Single(x => x.Age == lifeAssumptions.ageRentStart).TotalDeposits / 12m;

        resultRows = result.Protocol;
        
        // UI updates
        await DrawBarChart(barChart, result.Protocol, lifeAssumptions);
        await DrawLineChart(lineChart, result.Protocol, lifeAssumptions);

        await InvokeAsync(async () =>
        {
            StateHasChanged();
        });
    }
}